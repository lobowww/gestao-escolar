CREATE TABLE usuarios(
	id SERIAL PRIMARY KEY, -- SERIAL= TIPO DE DADO ESPECIAL PARA COLUNAS DE INTEIROS QUE SE AUTOINCREMENTAM
	nome VARCHAR(255) NOT NULL,
	cpf VARCHAR(14) NOT NULL UNIQUE, -- UNIQUE= TODOS OS VALORES NA COLUNA CPF DEVEM SER ÚNICOS EM TODA A TABELA
	telefone VARCHAR(20) NOT NULL,
	email VARCHAR(255) NOT NULL UNIQUE,
	login VARCHAR(100) NOT NULL UNIQUE,
	senha VARCHAR(255) NOT NULL,
	tipo_usuario VARCHAR(20) NOT NULL CHECK(tipo_usuario IN('ALUNO', 'PROFESSOR', 'COORDENADOR', 'DIRETOR'))
);

CREATE TABLE disciplinas(
	id SERIAL PRIMARY KEY,
	nome VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE grades(
	id SERIAL PRIMARY KEY
);

CREATE TABLE professores(
	usuario_id INT PRIMARY KEY,
	especialidade_principal VARCHAR(255) NOT NULL,
	CONSTRAINT fk_professor_usuario FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE
	-- Define a chave estrangeira e específica que usuario_id nesta tabela é uma fk, criação de um relacionamento entre professores e usuarios
	-- Se o registro em usuarios for deletado, também será em professores e se for atualizado também
);

CREATE TABLE coordenadores(
	usuario_id INT PRIMARY KEY,
	CONSTRAINT fk_coordenador_usuario FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE turmas(
	id SERIAL PRIMARY KEY,
	nome VARCHAR(100) NOT NULL UNIQUE,
	turno VARCHAR(20) NOT NULL,
	ano INT NOT NULL,
	grade_id INT UNIQUE,
	coordenador_id INT NOT NULL UNIQUE,
	CONSTRAINT fk_tuma_grade FOREIGN KEY(grade_id) REFERENCES grades(id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT fk_turma_coordenador FOREIGN KEY (coordenador_id) REFERENCES coordenadores(usuario_id) ON DELETE SET NULL ON UPDATE CASCADE
	-- Caso uma grade seja deletada ou um coordenador será substituído por NULL...
);

CREATE TABLE alunos(
	usuario_id INT PRIMARY KEY,
	matricula VARCHAR(50) NOT NULL UNIQUE,
	turma_id INT,
	CONSTRAINT fk_aluno_usuario FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT fk_aluno_turma FOREIGN KEY(turma_id) REFERENCES turmas(id) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE mensalidades(
	id SERIAL PRIMARY KEY,
	aluno_id INT NOT NULL,
	valor NUMERIC(10, 2) NOT NULL,--("Double" delimitando quantidade de itens antes da vírgula e depois)
	data_vencimento DATE NOT NULL,
	data_pagamento DATE,
	numero_boleto VARCHAR(255),
	status_pagamento BOOLEAN NOT NULL DEFAULT FALSE,
	CONSTRAINT fk_mensalidade_aluno FOREIGN KEY (aluno_id) REFERENCES alunos(usuario_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE aulas (
    id SERIAL PRIMARY KEY,
    grade_id INT NOT NULL,
    dia_semana VARCHAR(20) NOT NULL,
    horario_inicio TIME NOT NULL,
    horario_fim TIME NOT NULL,
    disciplina_id INT NOT NULL,
    professor_id INT,
    CONSTRAINT fk_aula_grade FOREIGN KEY (grade_id) REFERENCES grades(id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_aula_disciplina FOREIGN KEY (disciplina_id) REFERENCES disciplinas(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT fk_aula_professor FOREIGN KEY (professor_id) REFERENCES professores(usuario_id) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT chk_horario_aula CHECK (horario_fim > horario_inicio)
);